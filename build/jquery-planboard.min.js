(function($){function jqExtendor(name,fn){var ext={};ext[name]=function(pass){return $(this).map(function(){return fn($(this),pass)})};$.fn.extend(ext)}function jqDefine(name,cstr){jqExtendor(name,function($e,p){return new cstr($e,p)})}function jqBuild(name,fn){jqExtendor(name,fn)}function jqMerge(defs,vals){return $.extend($.extend({},defs),vals)}function jqEnableEvent(obj,name,bubble){bubble=bubble||false;if(name==undefined){return}name=""+name;if(obj[name]!=undefined){throw"Can't initialise eventing for "+name+". Associated property already exists."}var $obj=$(obj);obj[name]=function(fn){return fn&&$.isFunction(fn)?$obj.bind(name,null,fn,bubble):$obj.triggerHandler(name,[fn])}}var templates={};function getTemplate(t){if(templates[t]==null){templates[t]=uritemplate(t)}return templates[t]}function expandUri(t,c){var p=getTemplate(t);return p.expand(c)}function makePropReader(t){if(t.constructor==PropReader){return t}return new PropReader(t)}function PropReader(t){this.props=t!=null?t.split("."):[]}PropReader.prototype.readFrom=function(o){var v=o;var i=0,len=this.props.length;while(i<len&&v!=null){v=v[this.props[i++]]}return v};function readProp(config,propName,obj){config[propName]=makePropReader(config[propName]);return config[propName].readFrom(obj)}jqDefine("planboard",Planboard);function Planboard($elm,config){this.config=jqMerge(Planboard.config,config);var options=this.config.datepicker;var lang=this.config.lang;if(lang!="en"){$.extend(options,$.datepicker.regional[lang])}if(this.config.datenames){options.dayNamesMin=this.config.datenames}else{this.config.datenames=options.dayNamesMin}if(this.config.monthnames){options.monthNames=this.config.monthnames}else{this.config.monthnames=options.monthNames}delete options.onSelect;this.config.datepicker=options;if(this.config.startDate!=null&&typeof this.config.startDate=="string"){var ds=this.config.startDate.split("-");var dt=new Date;dt.setFullYear(Number(ds[0]));dt.setMonth(Number(ds[1])-1);dt.setDate(Number(ds[2]));this.config.startDate=dt}this.$board=$elm;this.init();$elm.data("planboard",this)}Planboard.config={jScrollPane:{showArrows:true},datepicker:{autoSize:true,changeYear:true,showOtherMonths:false,selectOtherMonths:true,numberOfMonths:2,stepMonths:2,yearRange:"c-5:c+5"},scrollBarSize:16,northScrollHeight:"115px",westScrollWidth:"95px",lang:$("html").attr("lang"),labelRepeatDayCount:28,addDayCount:7,daysafter:14,daysbefore:7,initDayCount:42,allocInclusive:0,allocOffset:.5,allocFromProperty:"from",allocTillProperty:"till",allocIdProperty:"id",allocLabelProperty:"label",allocRowProperty:"rowid",allocTypeProperty:"type",periodInclusive:1,periodFromProperty:"from",periodTillProperty:"till",periodIdProperty:"id",periodLabelProperty:"label",rowIdProperty:"id",rowLabelProperty:"label",datePickerButton:"<button class='tool'><img src='./image/date.png' /></button>",prependButton:"<button class='colPrepend'>&lt;&lt;</button>",appendButton:"<button class='colAppend'>&gt;&gt;</button>"};Planboard.prototype.eachRow=function(selection,fn){if(arguments.length<2){fn=arguments[0];selection=null}if(!$.isFunction(fn)){return}var code;if(!selection){for(code in this.rows.bycode){fn(this,this.rows.bycode[code])}}else{if(selection.constructor!=Array){selection=[selection]}$(selection).each(function(){fn(this,this.rows.bycode[this])})}};Planboard.prototype.addToElement=function(elmName,$stuff){var $parent=this.getElement(elmName);if($parent){$parent.append($stuff)}};Planboard.prototype.getElement=function(elmName){if(elmName=="tools"){return this.$tools}else if(elmName=="north-west"){return this.$nw}};Planboard.prototype.getSelection=function(){return this.selection};Planboard.prototype.clearSelection=function(){Planboard.updateSelection(this,null)};Planboard.prototype.setSelection=function(code,fromdate,tilldate){Planboard.updateSelection(this,{code:code,fromnum:Planboard.date2Num(fromdate),tillnum:Planboard.date2Num(tilldate)})};function createGrid(me){me.$nw=$("<div class='north west'      ></div>");me.$nm=$("<div class='north meridian'  ></div>");me.$ne=$("<div class='north east'      ></div>");me.$NO=$([]).add(me.$nw).add(me.$nm).add(me.$ne);me.$ew=$("<div class='equator west'    ></div>");me.$em=$("<div class='equator meridian'></div>");me.$ee=$("<div class='equator east'    ></div>");me.$EQ=$([]).add(me.$ew).add(me.$em).add(me.$ee);me.$sw=$("<div class='south west'      ></div>");me.$sm=$("<div class='south meridian'  ></div>");me.$se=$("<div class='south east'      ></div>");me.$SO=$([]).add(me.$sw).add(me.$sm).add(me.$se)}Planboard.prototype.init=function(){createGrid(this);var me=this;this.$north=$("<div></div>");this.$colhead=$("<div style='overflow: hidden'></div>");this.$days=$("<div class='uc days'></div>");this.$months=$("<div class='months'></div>");this.$periods=$("<div class='periods'></div>");this.$colhead.append(this.$periods).append(this.$months).append(this.$days);this.$north.append(this.$colhead);this.$nscroll=$("<div style='width=100%; overflow:auto;margin-right: "+this.config.scrollBarSize+"px'></div>");this.$nscroll.height(this.config.northScrollHeight);this.$nscroll.append(this.$north).jScrollPane(this.config.jScrollPane);this.$nm.append(this.$nscroll);var $btnPreDates=$(this.config.prependButton).click(function(){me.prependCol(me.config.addDayCount)});this.$nw.html("<div></div>").append($btnPreDates);var $btnAppDates=$(this.config.appendButton).click(function(){me.appendCol(me.config.addDayCount)});this.$ne.html("<div></div>").append($btnAppDates);this.$west=$("<div class='uc'></div>");this.$wscroll=$("<div style='overflow:auto;'></div>");this.$wscroll.width(this.config.westScrollWidth);this.$wscroll.append(this.$west).jScrollPane(this.config.jScrollPane);this.$ew.append(this.$wscroll);this.$center=$("<div class='board'></div>");this.$cscroll=$("<div style='overflow:auto;'></div>");this.$cscroll.width(this.config.westScrollWidth);this.$cscroll.height(this.config.northScrollHeight);this.$cscroll.append(this.$center).jScrollPane(this.config.jScrollPane);this.$em.append(this.$cscroll);this.$WE=$([]).add(this.$nw).add(this.$ew).add(this.$sw);this.$ME=$([]).add(this.$nm).add(this.$em).add(this.$sm);this.$EA=$([]).add(this.$ne).add(this.$ee).add(this.$se);this.$board.addClass("planboard").html("").append(this.$NO).append(this.$EQ).append(this.$SO);this.$status=$("<div class='status'>&nbsp;</div>");this.$sm.append(this.$status);this.$tools=$("<div class='tools'></div>");var $datePickDiv=$("<div class='tool datepick'></div>");function dateSelected(dateText,inst){me.$pickDate.click();me.gotoDate($datePickDiv.datepicker("getDate"))}this.$tools.append($datePickDiv);$datePickDiv.datepicker($.extend({onSelect:dateSelected},this.config.datepicker));$datePickDiv.hide();this.$pickDate=$(this.config.datePickerButton);this.$pickDate.click(function(){me.pickDateTool($datePickDiv)});this.$tools.append(this.$pickDate);this.$ee.append(this.$tools);if(!this.config.unitsize){this.$center.html("<div class='uc'><div class='u h w'>0</div></div>");var $u=this.$center.find(".u.h.w");this.config.unitsize=Math.max($u.outerWidth(),$u.outerHeight());this.$center.html("")}this.initEvents();this.initCells();jspHookup("y",this.$cscroll,this.$wscroll);jspHookup("x",this.$cscroll,this.$nscroll);this.initSize();var me=this;$(window).resize(function(){me.initSize()});$("body").keypress(function(evt){evt.stopPropagation();Planboard.keypress(me,$(this),evt)});$("body").keyup(function(evt){evt.stopPropagation();Planboard.keyup(me,$(this),evt)})};Planboard.prototype.setStatus=function(msg){this.$status.html(msg)};Planboard.registerCellEvents=function(me,$elm,id,code,num){var context={id:id,code:code,num:num};$elm.hover(function(evt){Planboard.enterContext(context,me,$(this),evt)},function(evt){Planboard.leaveContext(context,me,$(this),evt)});$elm.click(function(evt){Planboard.clickCell(context,me,$(this),evt)})};function highlight($elm,style){$elm.addClass("highlight");if(style){$elm.addClass(style)}}function downlight($elm,style){$elm.removeClass("highlight");if(style){$elm.removeClass(style)}}Planboard.enterContext=function(context,me,$cell,evt){if(context.code){highlight(me.rows.bycode[context.code].$elm,context.style)}if(context.num){highlight(me.cols.bynum[context.num].$elm,context.style)}else if(context.fromnum&&context.tillnum){var num;var firstnum=Math.max(context.fromnum,me.cols.firstnum);var lastnum=Math.min(context.tillnum,me.cols.lastnum);for(num=firstnum;num<=lastnum;num++){highlight(me.cols.bynum[num].$elm,context.style)}}};Planboard.leaveContext=function(context,me,$cell,evt){if(context.code){downlight(me.rows.bycode[context.code].$elm,context.style)}if(context.num){downlight(me.cols.bynum[context.num].$elm,context.style)}else if(context.fromnum&&context.tillnum){var num;var firstnum=Math.max(context.fromnum,me.cols.firstnum);var lastnum=Math.min(context.tillnum,me.cols.lastnum);for(num=firstnum;num<=lastnum;num++){downlight(me.cols.bynum[num].$elm,context.style)}}};Planboard.clickCell=function(context,me,$cell,evt){var num=context.num;var code=context.code;var sel=me.selection;sel=sel||{};if(code&&sel.code!=code){sel.code=code;if(num!=undefined){sel.fromnum=num;sel.tillnum=num;sel.lastnum=num}}if(num!=undefined){if(sel.lastnum==undefined||sel.lastnum==num){sel.fromnum=num;sel.tillnum=num+1}else if(sel.lastnum<num){sel.fromnum=sel.lastnum;sel.tillnum=num}else{sel.tillnum=sel.lastnum;sel.fromnum=num}sel.lastnum=num}sel.pressTS=0;Planboard.updateSelection(me,sel)};Planboard.PRESS_TIMEOUT_MS=1e3;Planboard.keyup=function(me,$body,evt){var sel=me.selection;if(!sel){return}if(evt.which==27||evt.which==46){Planboard.updateSelection(me,null)}};Planboard.keypress=function(me,$body,evt){var sel=me.selection;if(!sel){return}var pressTS=(new Date).getTime();var count=sel.tillnum-sel.fromnum;if(evt.which==43||evt.which==61){count++;pressTS=0}else if(evt.which==45||evt.which==95){count--;pressTS=0}else if(evt.which==60||evt.which==44){sel.fromnum--;pressTS=0}else if(evt.which==62||evt.which==46){sel.fromnum++;pressTS=0}else if(evt.which<48||evt.which>57){me.selection.lastcount=0;delete me.selection.pressTS;return}else{var digit=evt.which-48;count=0;if(sel.pressTS&&pressTS-sel.pressTS<Planboard.PRESS_TIMEOUT_MS){count=sel.lastcount}count=count*10+digit}sel.pressTS=pressTS;sel.lastcount=count;sel.tillnum=sel.fromnum+Math.max(1,count);sel.lastnum=sel.fromnum;Planboard.updateSelection(me,sel)};Planboard.NEWID="__NEW__";Planboard.toDateStr=function(me,date){var datenames=me.config.datenames;var monthnames=me.config.monthnames;return datenames[date.getDay()]+" "+date.getDate()+" "+monthnames[date.getMonth()]+" "+date.getFullYear()};Planboard.updateSelection=function(me,newsel){var sel=me.selection;if(sel){sel.$elm.remove();var context={id:sel.id,style:"new",code:sel.code,fromnum:sel.fromnum,tillnum:sel.tillnum};Planboard.leaveContext(context,me,sel.$elm,null);sel.$elm=null;me.setStatus("")}sel=newsel;if(sel){var markfloat="right",marker="&lt;";if(sel.lastnum==sel.fromnum){markfloat="left";marker="&gt;"}var lbl="<div style='padding-"+markfloat+": 2px; float: "+markfloat+";'>"+marker+"</div>"+(sel.tillnum-sel.fromnum);sel.$elm=me.makeAllocElm(Planboard.NEWID,"new",sel.code,sel.fromnum,sel.tillnum,lbl);var lbl="";if(sel.code){sel.row=me.rows.bycode[sel.code];lbl+=sel.row.label}if(sel.fromnum&&sel.tillnum){sel.fromdate=Planboard.num2Date(sel.fromnum);sel.tilldate=Planboard.num2Date(sel.tillnum);lbl+=lbl.length?": ":"";lbl+="("+(sel.tillnum-sel.fromnum)+") ";lbl+=Planboard.toDateStr(me,sel.fromdate)+"  "+Planboard.toDateStr(me,sel.tilldate)}sel.lbl=lbl;me.setStatus(lbl)}me.selection=sel;me.selectionChange(sel)};Planboard.registerAllocEvents=function(me,$elm,id,style,code,fromnum,tillnum){var context={id:id,style:style,code:code,fromnum:fromnum,tillnum:tillnum};$elm.hover(function(evt){evt.stopPropagation();Planboard.enterContext(context,me,$(this),evt)},function(evt){evt.stopPropagation();Planboard.leaveContext(context,me,$(this),evt)});$elm.click(function(evt){evt.stopPropagation();Planboard.clickAlloc(context,me,$(this),evt)})};Planboard.clickAlloc=function(context,me,$alloc,evt){if(context.id==Planboard.NEWID){me.selectionDetail(me.selection)}else{me.allocDetail(me.allocs[context.id])}};Planboard.registerPeriodEvents=function(me,$elm,id,fromnum,tillnum){var context={id:id,style:"period",fromnum:fromnum,tillnum:tillnum};$elm.hover(function(evt){evt.stopPropagation();Planboard.enterContext(context,me,$(this),evt)},function(evt){evt.stopPropagation();Planboard.leaveContext(context,me,$(this),evt)});$elm.click(function(evt){evt.stopPropagation();Planboard.clickPeriod(context,me,$(this),evt)})};Planboard.clickPeriod=function(context,me,$period,evt){var sel=me.selection||{};sel.fromnum=context.fromnum;sel.tillnum=context.tillnum+this.config.periodInclusive-this.config.allocInclusive;sel.lastnum=sel.fromnum;sel.pressTS=0;Planboard.updateSelection(me,sel)};Planboard.prototype.pickDateTool=function($div){if(!$div.data("context")){$div.data("context",true);$div.show();this.$pickDate.addClass("pressed");$div.css("right",$div.find(".ui-widget").outerWidth()+"px")}else{this.$pickDate.removeClass("pressed");$div.hide();$div.data("context",false)}};function jspHookup(axis,$el1,$el2){var ap1=$el1.data("jsp");var ap2=$el2.data("jsp");var evt="jsp-scroll-"+axis;var meth="scrollTo"+axis.toUpperCase();var link=true;_jspLink(link,$el1,evt,ap2,meth);_jspLink(link,$el2,evt,ap1,meth)}function _jspLink(guard,$src,evt,tgt,meth){$src.bind(evt,function(event,pos,isMin,isMax){if(guard){guard=false;tgt[meth](pos);guard=true}})}Planboard.prototype.gotoDate=function(date){var gotoNum=Planboard.date2Num(date);var hsapi=this.$cscroll.data("jsp");if(gotoNum>=this.cols.firstnum&&gotoNum<=this.cols.lastnum){var xpcnt=(gotoNum-this.cols.firstnum)/(this.cols.lastnum-this.cols.firstnum);hsapi.scrollToPercentX(xpcnt);return}var prependCount=this.cols.firstnum-gotoNum;var appendCount=gotoNum-this.cols.lastnum;if(appendCount>=0&&appendCount<this.config.initDayCount){this.appendCol(appendCount+this.config.daysafter);hsapi.scrollToPercentX(100);return}if(prependCount>=0&&prependCount<this.config.initDayCount){this.prependCol(prependCount+this.config.daysbefore);hsapi.scrollToPercentX(0);return}this.clearColumns();this.config.startDate=date;this.initDates()};function ajaxLoadedRows(board,data,textStatus,jqXhr){var size=data.length;for(i=0;i<size;i++){var last=size==i+1;board.appendRow(data[i],last)}board.reloadAllocs()}Planboard.prototype.reloadAllocs=function(){if(this.cols&&this.cols.firstnum!=null&&this.cols.lastnum!=null){this.loadAllocs(this.cols.firstnum,this.cols.lastnum)}};Planboard.prototype.loadRows=function(){var rowuri=expandUri(this.config.uri.row,{});var me=this;$.get(rowuri,function(d,s,x){ajaxLoadedRows(me,d,s,x)},"json")};Planboard.prototype.initCells=function(){this.loadRows();this.config.startDate=this.config.startDate||Planboard.offsetDate();this.initDates()};Planboard.prototype.initDates=function(){this.appendCol(this.config.initDayCount)};Planboard.offsetDate=function(offset,date){offset=offset||0;date=date||new Date;var od=new Date(date.getTime());od.setDate(date.getDate()+offset);return od};var ONEDAYms=1e3*60*60*24;Planboard.date2Num=function(date){if(!date){return null}return Math.floor(.5+date.getTime()/ONEDAYms)};Planboard.num2Date=function(num){if(num==null){return null}return new Date(num*ONEDAYms)};Planboard.num2Str=function(num){var date=Planboard.num2Date(num);var yyyy=""+date.getFullYear();var mm=date.getMonth()+1;var dd=date.getDate();mm=mm<10?"0"+mm:""+mm;dd=dd<10?"0"+dd:""+dd;return yyyy+"-"+mm+"-"+dd};function monthClass(m){return"m"+(1+m)%2}var DATEPATTERN_RE=/(\d{2,4})-(\d{1,2})-(\d{1,2})/;Planboard.string2Date=function(str){var match=str.match(DATEPATTERN_RE);if(match===null){return null}return new Date(match[1],match[2]-1,match[3])};Planboard.prototype.addPeriod=function(period){if(!this.periods){this.periods={};this.periodnums={}}var id=readProp(this.config,"periodIdProperty",period);if(this.periods[id]){return}var fromnum=Planboard.date2Num(Planboard.string2Date(readProp(this.config,"periodFromProperty",period)));var tillnum=Planboard.date2Num(Planboard.string2Date(readProp(this.config,"periodTillProperty",period)));if(tillnum<this.cols.firstnum||fromnum>this.cols.lastnum){return}var days=this.config.periodInclusive+tillnum-fromnum;var anchornum=Math.max(this.cols.firstnum,fromnum);var offdays=fromnum-anchornum;var width=days*this.config.unitsize;var offset=offdays*this.config.unitsize;var headId=toCellId("",anchornum);var $anchor=this.$days.find("#"+headId);period.$elm=$("<div class='period' style='left: "+offset+"px; width: "+width+"px'>"+readProp(this.config,"periodLabelProperty",period)+"</div>");Planboard.registerPeriodEvents(this,period.$elm,id,fromnum,tillnum);$anchor.append(period.$elm);var num;for(num=fromnum;num<=tillnum;num++){this.periodnums[num]=period;var lookup=".cell.num_"+num;var $cells=this.$board.find(lookup);$cells.addClass("pmark")}this.periods[id]=period};function ajaxLoadedPeriods(board,data,textStatus,jqXhr){board.$periods.html("");var size=data.length;for(i=0;i<size;i++){board.addPeriod(data[i])}}Planboard.prototype.loadPeriods=function(firstnum,lastnum){var uricontext={firstnum:firstnum,lastnum:lastnum,firstdate:Planboard.num2Str(firstnum),lastdate:Planboard.num2Str(lastnum)};var perioduri=expandUri(this.config.uri.period,uricontext);var me=this;$.get(perioduri,function(d,s,x){ajaxLoadedPeriods(me,d,s,x)},"json")};Planboard.prototype.makeAllocElm=function(id,style,code,fromnum,tillnum,label){var days=tillnum-fromnum+this.config.allocInclusive;var num=Math.max(this.cols.firstnum,fromnum);var offdays=fromnum-num+this.config.allocOffset;var width=days*this.config.unitsize;var offset=offdays*this.config.unitsize;var cellId=toCellId(code,num);var cellClass="alloc"+" "+style;var $anchor=this.$center.find("#"+cellId);var $elm=$("<div class='"+cellClass+"' style='left: "+offset+"px; width: "+width+"px'></div>");Planboard.registerAllocEvents(this,$elm,id,style,code,fromnum,tillnum);var labels="";var repeatDays=this.config.labelRepeatDayCount;var times=Math.floor(days/repeatDays)+1;var repeatWidth=Math.min(width,repeatDays*this.config.unitsize);var n;for(n=0;n<times;n++){if(n==times-1){repeatWidth=width-n*repeatWidth}labels+="<div style='float: left; width: "+repeatWidth+"px'>"+label+"</div>"}$elm.html(labels);$anchor.append($elm);return $elm};Planboard.prototype.addAlloc=function(alloc){if(!this.allocs){this.allocs={}}var id=readProp(this.config,"allocIdProperty",alloc);if(this.allocs[id]){this.allocs[id].$elm.remove();delete this.allocs[id]}var fromnum=Planboard.date2Num(Planboard.string2Date(readProp(this.config,"allocFromProperty",alloc)));var tillnum=Planboard.date2Num(Planboard.string2Date(readProp(this.config,"allocTillProperty",alloc)));if(tillnum<this.cols.firstnum||fromnum>this.cols.lastnum){return}var code=readProp(this.config,"allocRowProperty",alloc);var label=readProp(this.config,"allocLabelProperty",alloc);var style=readProp(this.config,"allocTypeProperty",alloc);alloc.$elm=this.makeAllocElm(id,style,code,fromnum,tillnum,label);this.allocs[id]=alloc};function ajaxLoadedAllocs(board,data,textStatus,jqXhr){var size=data.length;for(i=0;i<size;i++){board.addAlloc(data[i])}}Planboard.prototype.loadAllocs=function(firstnum,lastnum){var rowids=[],code;if(this.rows){for(code in this.rows.bycode){rowids.push(code)}var uricontext={firstnum:firstnum,lastnum:lastnum,firstdate:Planboard.num2Str(firstnum),lastdate:Planboard.num2Str(lastnum),rows:rowids};var allocuri=expandUri(this.config.uri.allocation,uricontext);var me=this;$.get(allocuri,function(d,s,x){ajaxLoadedAllocs(me,d,s,x)},"json")}};Planboard.prototype.updateTimes=function(){if(!this.cols){return}var fDateNum=this.cols.firstnum;var lDateNum=this.cols.lastnum;this.loadPeriods(fDateNum,lDateNum);this.loadAllocs(fDateNum,lDateNum);this.updateMonths(fDateNum,lDateNum)};Planboard.prototype.updateMonths=function(fDateNum,lDateNum){var monthsHtml="";var fDateNum=this.cols.firstnum;var lDateNum=this.cols.lastnum;var cfDateNum=fDateNum;do{var cfDate=Planboard.num2Date(cfDateNum);var m=cfDate.getMonth();var fy=cfDate.getFullYear();var clDate=new Date(cfDate.getFullYear(),m+1,0);var clDateNum=Planboard.date2Num(clDate);var clDateNum=Math.min(clDateNum,lDateNum);var days=1+clDateNum-cfDateNum;var width=this.config.unitsize*days-2;var mclass=monthClass(m);monthsHtml+="<div class='month "+mclass+"' style='width: "+width+"px;'>"+this.config.monthnames[m]+" "+fy+"</div>";cfDateNum=clDateNum+1}while(cfDateNum<=lDateNum);this.$months.html(monthsHtml)};Planboard.prototype.clearColumns=function(){if(this.rows){for(code in this.rows.bycode){var row=this.rows.bycode[code];row.$row.html("")}}this.$days.html("");this.cols=null;this.periods=null;this.allocs=null};Planboard.prototype.appendCol=function(count){this._addCol(false,count);this.updateTimes()};Planboard.prototype.prependCol=function(count){this._addCol(true,count);this.updateTimes()};Planboard.prototype._addCol=function(prepend,count){prepend=prepend||false;for(;count>1;count--){this._addCol(prepend)}if(this.cols==null){this.cols={count:0,bynum:{}}}var refDateNum=this.cols.lastnum,offset=1;if(prepend){refDateNum=this.cols.firstnum;offset=-1}var newDateNum=refDateNum!=null?refDateNum+offset:Planboard.date2Num(this.config.startDate)-this.config.daysbefore;var newCol=new PlanColumn(newDateNum,this,prepend);if(prepend){this.$days.prepend(newCol.$elm)}else{this.$days.append(newCol.$elm)}if(count==null){return}var newCellHeight=newCol.$elm.height()+1;this.$north.height(newCellHeight);var newWidth=1+this.cols.count*this.config.unitsize;var oldWidth=this.$north.width();this.$colhead.width(newWidth);this.$north.width(newWidth);this.$center.width(newWidth);this.reinitHorizontalScrollBar();this.dateRangeChanged({firstdate:Planboard.num2Date(this.cols.firstnum),lastdate:Planboard.num2Date(this.cols.lastnum)})};function PlanColumn(datenum,board,prepend){prepend=prepend||false;var allCols=board.cols;var datenames=board.config.datenames;this.datenum=datenum;this.date=Planboard.num2Date(datenum);this.label=datenames[this.date.getDay()]+"<br/>"+this.date.getDate();this.$cells=$([]);this.classes=[monthClass(this.date.getMonth())];if(this.date.getDay()%6==0){this.classes.push("we")}var headId=toCellId("",this.datenum);this.$elm=$("<div class='u w "+this.classes.join(" ")+"' id="+headId+">"+this.label+"</div>");Planboard.registerCellEvents(board,this.$elm,headId,null,this.datenum);allCols.bynum[this.datenum]=this;if(prepend){allCols.firstnum=this.datenum;allCols.lastnum=allCols.lastnum!=null?allCols.lastnum:allCols.firstnum}else{allCols.lastnum=this.datenum;allCols.firstnum=allCols.firstnum!=null?allCols.firstnum:allCols.lastnum}allCols.count++;var allRows=board.rows;if(allRows){var code;for(code in allRows.bycode){var row=allRows.bycode[code];board.newCell(row.code,this.datenum,row,this,prepend)}}}Planboard.prototype.appendRow=function(rowData,adjustScrollBar){if(this.rows==null){this.rows={count:0,bycode:{}}}var code=readProp(this.config,"rowIdProperty",rowData);var label=readProp(this.config,"rowLabelProperty",rowData);var newRow=this.rows.bycode[code];if(newRow){return}newRow=new PlanRow(code,label,rowData,this);this.$west.append(newRow.$elm);this.$center.append(newRow.$row);this.rowHeadResize(newRow,adjustScrollBar);var newHeight=1+this.rows.count*this.config.unitsize;this.$west.height(newHeight);this.$center.height(newHeight);if(adjustScrollBar){this.reinitVerticalScrollBar()}};function PlanRow(code,label,rowData,board){var allRows=board.rows;this.code=code;this.label=label;this.data=rowData;var headId=toCellId(code,"");this.$elm=$("<div class='u h row' id="+headId+">"+this.label+"</div>");Planboard.registerCellEvents(board,this.$elm,headId,code,null);allRows.bycode[code]=this;allRows.count++;var rowId=toCellId(code,"--");this.$row=$("<div class='uc row' id="+rowId+"></div>");var allCols=board.cols;if(allCols){var colnum,firstnum=allCols.firstnum,lastnum=allCols.lastnum;for(colnum=firstnum;colnum<=lastnum;colnum++){var col=allCols.bynum[colnum];board.newCell(this.code,colnum,this,col)}}}Planboard.prototype.removeRow=function(row){if(this.rows==null){return}var code=row.code;delete this.rows.bycode[code];this.rows.count--;row.$elm.remove();row.$row.remove();this.rowHeadResize()};Planboard.prototype.rowHeadResize=function(row,adjustScrollBar){if(row){var newCellWidth=row.$elm.width()+1;var newWidth=Math.max(this.$west.width(),newCellWidth);this.$west.width(newWidth)}var newHeight=1+this.rows.count*this.config.unitsize;this.$west.height(newHeight);this.$center.height(newHeight);if(adjustScrollBar){this.reinitVerticalScrollBar()}};function toCellId(code,num){return code+"_"+num}Planboard.prototype.newCell=function(code,num,row,col,prepend){prepend=prepend||false;var cellId=toCellId(code,num);var cellClass="cell num_"+num;if(this.periodnums&&this.periodnums[num]){cellClass+=" pmark"}var $cell=$("<div class='u h w "+col.classes.join(" ")+"' id='"+cellId+"'><div class='"+cellClass+"'>&nbsp;</div></div>");Planboard.registerCellEvents(this,$cell,cellId,code,num);if(prepend){row.$row.prepend($cell)}else{row.$row.append($cell)}col.$cells.add($cell)};Planboard.prototype.initEvents=function(){jqEnableEvent(this,"selectionChange");jqEnableEvent(this,"selectionDetail");jqEnableEvent(this,"allocDetail");jqEnableEvent(this,"dateRangeChanged")};Planboard.prototype.initSize=function(){this.$board.css("height","");this.$board.css("width","");var noHeight=Math.max.apply(Math,this.$NO.map(function(){return $(this).css("height","").height()}).get());var soHeight=Math.max.apply(Math,this.$SO.map(function(){return $(this).css("height","").height()}).get());var eqHeight=this.$board.height()-(noHeight+soHeight);this.$NO.height(noHeight);this.$SO.height(soHeight);this.$EQ.height(eqHeight);this.$wscroll.height(eqHeight-17);this.$cscroll.height(eqHeight-1);var weWidth=Math.max.apply(Math,this.$WE.map(function(){return $(this).css("width","").width()}).get());var eaWidth=Math.max.apply(Math,this.$EA.map(function(){return $(this).css("width","").width()}).get());var meWidth=this.$board.width()-(weWidth+eaWidth);this.$WE.width(weWidth);this.$EA.width(eaWidth);this.$ME.width(meWidth);this.$board.width(this.$board.width());this.$board.height(this.$board.height());this.reinitScrollBars()};Planboard.prototype.reinitScrollBars=function(){this.reinitHorizontalScrollBar();this.reinitVerticalScrollBar()};function reinitBar($elm){var api=$elm.data("jsp");if(!api){return}api.reinitialise()}Planboard.prototype.reinitHorizontalScrollBar=function(){reinitBar(this.$cscroll,true);reinitBar(this.$nscroll,true)};Planboard.prototype.reinitVerticalScrollBar=function(){reinitBar(this.$cscroll);reinitBar(this.$wscroll)}})(jQuery);